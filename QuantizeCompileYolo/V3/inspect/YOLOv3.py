# GENETARED BY NNDCT, DO NOT EDIT!

import torch
from torch import tensor
import pytorch_nndct as py_nndct

class YOLOv3(py_nndct.nn.NndctQuantModel):
    def __init__(self):
        super(YOLOv3, self).__init__()
        self.module_0 = py_nndct.nn.Module('nndct_const') #YOLOv3::24336(YOLOv3::nndct_const_0)
        self.module_1 = py_nndct.nn.Module('nndct_const') #YOLOv3::24338(YOLOv3::nndct_const_1)
        self.module_2 = py_nndct.nn.Module('nndct_const') #YOLOv3::24340(YOLOv3::nndct_const_2)
        self.module_3 = py_nndct.nn.Module('nndct_const') #YOLOv3::24342(YOLOv3::nndct_const_3)
        self.module_4 = py_nndct.nn.Module('nndct_const') #YOLOv3::24344(YOLOv3::nndct_const_4)
        self.module_5 = py_nndct.nn.Module('nndct_const') #YOLOv3::24346(YOLOv3::nndct_const_5)
        self.module_6 = py_nndct.nn.Module('nndct_const') #YOLOv3::24294(YOLOv3::nndct_const_6)
        self.module_7 = py_nndct.nn.Module('nndct_const') #YOLOv3::24295(YOLOv3::nndct_const_7)
        self.module_8 = py_nndct.nn.Module('nndct_const') #YOLOv3::24298(YOLOv3::nndct_const_8)
        self.module_9 = py_nndct.nn.Module('nndct_const') #YOLOv3::24301(YOLOv3::nndct_const_9)
        self.module_10 = py_nndct.nn.Module('nndct_const') #YOLOv3::24311(YOLOv3::nndct_const_10)
        self.module_11 = py_nndct.nn.Module('nndct_const') #YOLOv3::24312(YOLOv3::nndct_const_11)
        self.module_12 = py_nndct.nn.Module('nndct_const') #YOLOv3::24315(YOLOv3::nndct_const_12)
        self.module_13 = py_nndct.nn.Module('nndct_const') #YOLOv3::24318(YOLOv3::nndct_const_13)
        self.module_14 = py_nndct.nn.Module('nndct_const') #YOLOv3::24328(YOLOv3::nndct_const_14)
        self.module_15 = py_nndct.nn.Module('nndct_const') #YOLOv3::24329(YOLOv3::nndct_const_15)
        self.module_16 = py_nndct.nn.Module('nndct_const') #YOLOv3::24332(YOLOv3::nndct_const_16)
        self.module_17 = py_nndct.nn.Module('nndct_const') #YOLOv3::24335(YOLOv3::nndct_const_17)
        self.module_18 = py_nndct.nn.Input() #YOLOv3::input_0(YOLOv3::nndct_input_18)
        self.module_19 = py_nndct.nn.Conv2d(in_channels=3, out_channels=32, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.3(YOLOv3::nndct_conv2d_19)
        self.module_20 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.7(YOLOv3::nndct_leaky_relu_20)
        self.module_21 = py_nndct.nn.Conv2d(in_channels=32, out_channels=64, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.9(YOLOv3::nndct_conv2d_21)
        self.module_22 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.13(YOLOv3::nndct_leaky_relu_22)
        self.module_23 = py_nndct.nn.Conv2d(in_channels=64, out_channels=32, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.15(YOLOv3::nndct_conv2d_23)
        self.module_24 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.19(YOLOv3::nndct_leaky_relu_24)
        self.module_25 = py_nndct.nn.Conv2d(in_channels=32, out_channels=64, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.21(YOLOv3::nndct_conv2d_25)
        self.module_26 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.25(YOLOv3::nndct_leaky_relu_26)
        self.module_27 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block1]/ResBlock[res0]/21239(YOLOv3::nndct_elemwise_add_27)
        self.module_28 = py_nndct.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.27(YOLOv3::nndct_conv2d_28)
        self.module_29 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.31(YOLOv3::nndct_leaky_relu_29)
        self.module_30 = py_nndct.nn.Conv2d(in_channels=128, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.33(YOLOv3::nndct_conv2d_30)
        self.module_31 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.37(YOLOv3::nndct_leaky_relu_31)
        self.module_32 = py_nndct.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.39(YOLOv3::nndct_conv2d_32)
        self.module_33 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.43(YOLOv3::nndct_leaky_relu_33)
        self.module_34 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res0]/21331(YOLOv3::nndct_elemwise_add_34)
        self.module_35 = py_nndct.nn.Conv2d(in_channels=128, out_channels=64, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.45(YOLOv3::nndct_conv2d_35)
        self.module_36 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.49(YOLOv3::nndct_leaky_relu_36)
        self.module_37 = py_nndct.nn.Conv2d(in_channels=64, out_channels=128, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.51(YOLOv3::nndct_conv2d_37)
        self.module_38 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.55(YOLOv3::nndct_leaky_relu_38)
        self.module_39 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block2]/ResBlock[res1]/21393(YOLOv3::nndct_elemwise_add_39)
        self.module_40 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.57(YOLOv3::nndct_conv2d_40)
        self.module_41 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.61(YOLOv3::nndct_leaky_relu_41)
        self.module_42 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.63(YOLOv3::nndct_conv2d_42)
        self.module_43 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.67(YOLOv3::nndct_leaky_relu_43)
        self.module_44 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.69(YOLOv3::nndct_conv2d_44)
        self.module_45 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.73(YOLOv3::nndct_leaky_relu_45)
        self.module_46 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res0]/21485(YOLOv3::nndct_elemwise_add_46)
        self.module_47 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.75(YOLOv3::nndct_conv2d_47)
        self.module_48 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.79(YOLOv3::nndct_leaky_relu_48)
        self.module_49 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.81(YOLOv3::nndct_conv2d_49)
        self.module_50 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.85(YOLOv3::nndct_leaky_relu_50)
        self.module_51 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res1]/21547(YOLOv3::nndct_elemwise_add_51)
        self.module_52 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.87(YOLOv3::nndct_conv2d_52)
        self.module_53 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.91(YOLOv3::nndct_leaky_relu_53)
        self.module_54 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.93(YOLOv3::nndct_conv2d_54)
        self.module_55 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.97(YOLOv3::nndct_leaky_relu_55)
        self.module_56 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res2]/21609(YOLOv3::nndct_elemwise_add_56)
        self.module_57 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.99(YOLOv3::nndct_conv2d_57)
        self.module_58 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.103(YOLOv3::nndct_leaky_relu_58)
        self.module_59 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.105(YOLOv3::nndct_conv2d_59)
        self.module_60 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.109(YOLOv3::nndct_leaky_relu_60)
        self.module_61 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res3]/21671(YOLOv3::nndct_elemwise_add_61)
        self.module_62 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res4]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.111(YOLOv3::nndct_conv2d_62)
        self.module_63 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res4]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.115(YOLOv3::nndct_leaky_relu_63)
        self.module_64 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res4]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.117(YOLOv3::nndct_conv2d_64)
        self.module_65 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res4]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.121(YOLOv3::nndct_leaky_relu_65)
        self.module_66 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res4]/21733(YOLOv3::nndct_elemwise_add_66)
        self.module_67 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res5]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.123(YOLOv3::nndct_conv2d_67)
        self.module_68 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res5]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.127(YOLOv3::nndct_leaky_relu_68)
        self.module_69 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res5]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.129(YOLOv3::nndct_conv2d_69)
        self.module_70 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res5]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.133(YOLOv3::nndct_leaky_relu_70)
        self.module_71 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res5]/21795(YOLOv3::nndct_elemwise_add_71)
        self.module_72 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res6]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.135(YOLOv3::nndct_conv2d_72)
        self.module_73 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res6]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.139(YOLOv3::nndct_leaky_relu_73)
        self.module_74 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res6]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.141(YOLOv3::nndct_conv2d_74)
        self.module_75 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res6]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.145(YOLOv3::nndct_leaky_relu_75)
        self.module_76 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res6]/21857(YOLOv3::nndct_elemwise_add_76)
        self.module_77 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res7]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.147(YOLOv3::nndct_conv2d_77)
        self.module_78 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res7]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.151(YOLOv3::nndct_leaky_relu_78)
        self.module_79 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res7]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.153(YOLOv3::nndct_conv2d_79)
        self.module_80 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res7]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.157(YOLOv3::nndct_leaky_relu_80)
        self.module_81 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block3]/ResBlock[res7]/21919(YOLOv3::nndct_elemwise_add_81)
        self.module_82 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.159(YOLOv3::nndct_conv2d_82)
        self.module_83 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.163(YOLOv3::nndct_leaky_relu_83)
        self.module_84 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.165(YOLOv3::nndct_conv2d_84)
        self.module_85 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.169(YOLOv3::nndct_leaky_relu_85)
        self.module_86 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.171(YOLOv3::nndct_conv2d_86)
        self.module_87 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.175(YOLOv3::nndct_leaky_relu_87)
        self.module_88 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res0]/22011(YOLOv3::nndct_elemwise_add_88)
        self.module_89 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.177(YOLOv3::nndct_conv2d_89)
        self.module_90 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.181(YOLOv3::nndct_leaky_relu_90)
        self.module_91 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.183(YOLOv3::nndct_conv2d_91)
        self.module_92 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.187(YOLOv3::nndct_leaky_relu_92)
        self.module_93 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res1]/22073(YOLOv3::nndct_elemwise_add_93)
        self.module_94 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.189(YOLOv3::nndct_conv2d_94)
        self.module_95 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.193(YOLOv3::nndct_leaky_relu_95)
        self.module_96 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.195(YOLOv3::nndct_conv2d_96)
        self.module_97 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.199(YOLOv3::nndct_leaky_relu_97)
        self.module_98 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res2]/22135(YOLOv3::nndct_elemwise_add_98)
        self.module_99 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.201(YOLOv3::nndct_conv2d_99)
        self.module_100 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.205(YOLOv3::nndct_leaky_relu_100)
        self.module_101 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.207(YOLOv3::nndct_conv2d_101)
        self.module_102 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.211(YOLOv3::nndct_leaky_relu_102)
        self.module_103 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res3]/22197(YOLOv3::nndct_elemwise_add_103)
        self.module_104 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res4]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.213(YOLOv3::nndct_conv2d_104)
        self.module_105 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res4]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.217(YOLOv3::nndct_leaky_relu_105)
        self.module_106 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res4]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.219(YOLOv3::nndct_conv2d_106)
        self.module_107 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res4]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.223(YOLOv3::nndct_leaky_relu_107)
        self.module_108 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res4]/22259(YOLOv3::nndct_elemwise_add_108)
        self.module_109 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res5]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.225(YOLOv3::nndct_conv2d_109)
        self.module_110 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res5]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.229(YOLOv3::nndct_leaky_relu_110)
        self.module_111 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res5]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.231(YOLOv3::nndct_conv2d_111)
        self.module_112 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res5]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.235(YOLOv3::nndct_leaky_relu_112)
        self.module_113 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res5]/22321(YOLOv3::nndct_elemwise_add_113)
        self.module_114 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res6]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.237(YOLOv3::nndct_conv2d_114)
        self.module_115 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res6]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.241(YOLOv3::nndct_leaky_relu_115)
        self.module_116 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res6]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.243(YOLOv3::nndct_conv2d_116)
        self.module_117 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res6]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.247(YOLOv3::nndct_leaky_relu_117)
        self.module_118 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res6]/22383(YOLOv3::nndct_elemwise_add_118)
        self.module_119 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res7]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.249(YOLOv3::nndct_conv2d_119)
        self.module_120 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res7]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.253(YOLOv3::nndct_leaky_relu_120)
        self.module_121 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res7]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.255(YOLOv3::nndct_conv2d_121)
        self.module_122 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res7]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.259(YOLOv3::nndct_leaky_relu_122)
        self.module_123 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block4]/ResBlock[res7]/22445(YOLOv3::nndct_elemwise_add_123)
        self.module_124 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[2, 2], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.261(YOLOv3::nndct_conv2d_124)
        self.module_125 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.265(YOLOv3::nndct_leaky_relu_125)
        self.module_126 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.267(YOLOv3::nndct_conv2d_126)
        self.module_127 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res0]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.271(YOLOv3::nndct_leaky_relu_127)
        self.module_128 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.273(YOLOv3::nndct_conv2d_128)
        self.module_129 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res0]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.277(YOLOv3::nndct_leaky_relu_129)
        self.module_130 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res0]/22537(YOLOv3::nndct_elemwise_add_130)
        self.module_131 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.279(YOLOv3::nndct_conv2d_131)
        self.module_132 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res1]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.283(YOLOv3::nndct_leaky_relu_132)
        self.module_133 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.285(YOLOv3::nndct_conv2d_133)
        self.module_134 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res1]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.289(YOLOv3::nndct_leaky_relu_134)
        self.module_135 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res1]/22599(YOLOv3::nndct_elemwise_add_135)
        self.module_136 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.291(YOLOv3::nndct_conv2d_136)
        self.module_137 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res2]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.295(YOLOv3::nndct_leaky_relu_137)
        self.module_138 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.297(YOLOv3::nndct_conv2d_138)
        self.module_139 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res2]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.301(YOLOv3::nndct_leaky_relu_139)
        self.module_140 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res2]/22661(YOLOv3::nndct_elemwise_add_140)
        self.module_141 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.303(YOLOv3::nndct_conv2d_141)
        self.module_142 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res3]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.307(YOLOv3::nndct_leaky_relu_142)
        self.module_143 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.309(YOLOv3::nndct_conv2d_143)
        self.module_144 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res3]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.313(YOLOv3::nndct_leaky_relu_144)
        self.module_145 = py_nndct.nn.Add() #YOLOv3::YOLOv3/DarkNet53[backbone]/Sequential[res_block5]/ResBlock[res3]/22723(YOLOv3::nndct_elemwise_add_145)
        self.module_146 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.315(YOLOv3::nndct_conv2d_146)
        self.module_147 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.319(YOLOv3::nndct_leaky_relu_147)
        self.module_148 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.321(YOLOv3::nndct_conv2d_148)
        self.module_149 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.325(YOLOv3::nndct_leaky_relu_149)
        self.module_150 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv3]/Sequential[conv]/Conv2d[0]/ret.327(YOLOv3::nndct_conv2d_150)
        self.module_151 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv3]/Sequential[conv]/LeakyReLU[2]/ret.331(YOLOv3::nndct_leaky_relu_151)
        self.module_152 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv4]/Sequential[conv]/Conv2d[0]/ret.333(YOLOv3::nndct_conv2d_152)
        self.module_153 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv4]/Sequential[conv]/LeakyReLU[2]/ret.337(YOLOv3::nndct_leaky_relu_153)
        self.module_154 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=512, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv5]/Sequential[conv]/Conv2d[0]/ret.339(YOLOv3::nndct_conv2d_154)
        self.module_155 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown1]/Conv[conv5]/Sequential[conv]/LeakyReLU[2]/ret.343(YOLOv3::nndct_leaky_relu_155)
        self.module_156 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.345(YOLOv3::nndct_conv2d_156)
        self.module_157 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.349(YOLOv3::nndct_leaky_relu_157)
        self.module_158 = py_nndct.nn.Interpolate() #YOLOv3::YOLOv3/FPN[neck]/Upsample[upsample]/ret.351(YOLOv3::nndct_resize_158)
        self.module_159 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/FPN[neck]/ret.353(YOLOv3::nndct_concat_159)
        self.module_160 = py_nndct.nn.Conv2d(in_channels=768, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.355(YOLOv3::nndct_conv2d_160)
        self.module_161 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.359(YOLOv3::nndct_leaky_relu_161)
        self.module_162 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.361(YOLOv3::nndct_conv2d_162)
        self.module_163 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.365(YOLOv3::nndct_leaky_relu_163)
        self.module_164 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv3]/Sequential[conv]/Conv2d[0]/ret.367(YOLOv3::nndct_conv2d_164)
        self.module_165 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv3]/Sequential[conv]/LeakyReLU[2]/ret.371(YOLOv3::nndct_leaky_relu_165)
        self.module_166 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv4]/Sequential[conv]/Conv2d[0]/ret.373(YOLOv3::nndct_conv2d_166)
        self.module_167 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv4]/Sequential[conv]/LeakyReLU[2]/ret.377(YOLOv3::nndct_leaky_relu_167)
        self.module_168 = py_nndct.nn.Conv2d(in_channels=512, out_channels=256, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv5]/Sequential[conv]/Conv2d[0]/ret.379(YOLOv3::nndct_conv2d_168)
        self.module_169 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown2]/Conv[conv5]/Sequential[conv]/LeakyReLU[2]/ret.383(YOLOv3::nndct_leaky_relu_169)
        self.module_170 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.385(YOLOv3::nndct_conv2d_170)
        self.module_171 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.389(YOLOv3::nndct_leaky_relu_171)
        self.module_172 = py_nndct.nn.Interpolate() #YOLOv3::YOLOv3/FPN[neck]/Upsample[upsample]/ret.391(YOLOv3::nndct_resize_172)
        self.module_173 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/FPN[neck]/ret.393(YOLOv3::nndct_concat_173)
        self.module_174 = py_nndct.nn.Conv2d(in_channels=384, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv1]/Sequential[conv]/Conv2d[0]/ret.395(YOLOv3::nndct_conv2d_174)
        self.module_175 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv1]/Sequential[conv]/LeakyReLU[2]/ret.399(YOLOv3::nndct_leaky_relu_175)
        self.module_176 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv2]/Sequential[conv]/Conv2d[0]/ret.401(YOLOv3::nndct_conv2d_176)
        self.module_177 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv2]/Sequential[conv]/LeakyReLU[2]/ret.405(YOLOv3::nndct_leaky_relu_177)
        self.module_178 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv3]/Sequential[conv]/Conv2d[0]/ret.407(YOLOv3::nndct_conv2d_178)
        self.module_179 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv3]/Sequential[conv]/LeakyReLU[2]/ret.411(YOLOv3::nndct_leaky_relu_179)
        self.module_180 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv4]/Sequential[conv]/Conv2d[0]/ret.413(YOLOv3::nndct_conv2d_180)
        self.module_181 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv4]/Sequential[conv]/LeakyReLU[2]/ret.417(YOLOv3::nndct_leaky_relu_181)
        self.module_182 = py_nndct.nn.Conv2d(in_channels=256, out_channels=128, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv5]/Sequential[conv]/Conv2d[0]/ret.419(YOLOv3::nndct_conv2d_182)
        self.module_183 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/FPN[neck]/TopDownLayer[topdown3]/Conv[conv5]/Sequential[conv]/LeakyReLU[2]/ret.423(YOLOv3::nndct_leaky_relu_183)
        self.module_184 = py_nndct.nn.Module('nndct_shape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/23271(YOLOv3::nndct_shape_184)
        self.module_185 = py_nndct.nn.Conv2d(in_channels=128, out_channels=256, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.425(YOLOv3::nndct_conv2d_185)
        self.module_186 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.429(YOLOv3::nndct_leaky_relu_186)
        self.module_187 = py_nndct.nn.Conv2d(in_channels=256, out_channels=75, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/Conv2d[detect]/ret.431(YOLOv3::nndct_conv2d_187)
        self.module_188 = py_nndct.nn.Module('nndct_permute') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.433(YOLOv3::nndct_permute_188)
        self.module_189 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.435(YOLOv3::nndct_flatten_189)
        self.module_190 = py_nndct.nn.Module('nndct_reshape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.437(YOLOv3::nndct_reshape_190)
        self.module_191 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.439(YOLOv3::nndct_strided_slice_191)
        self.module_192 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.441(YOLOv3::nndct_sigmoid_192)
        self.module_193 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.443(YOLOv3::nndct_strided_slice_193)
        self.module_194 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.445(YOLOv3::nndct_sigmoid_194)
        self.module_195 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.447(YOLOv3::nndct_strided_slice_195)
        self.module_196 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.449(YOLOv3::nndct_strided_slice_196)
        self.module_197 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.451(YOLOv3::nndct_concat_197)
        self.module_198 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.453(YOLOv3::nndct_select_198)
        self.module_199 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.455(YOLOv3::nndct_elemwise_add_199)
        self.module_200 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.457(YOLOv3::nndct_elemwise_div_200)
        self.module_201 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.459(YOLOv3::nndct_select_201)
        self.module_202 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.461(YOLOv3::nndct_elemwise_add_202)
        self.module_203 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.463(YOLOv3::nndct_elemwise_div_203)
        self.module_204 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.465(YOLOv3::nndct_select_204)
        self.module_205 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.467(YOLOv3::nndct_elemwise_exp_205)
        self.module_206 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.469(YOLOv3::nndct_elemwise_mul_206)
        self.module_207 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.471(YOLOv3::nndct_select_207)
        self.module_208 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.473(YOLOv3::nndct_elemwise_exp_208)
        self.module_209 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.475(YOLOv3::nndct_elemwise_mul_209)
        self.module_210 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.477(YOLOv3::nndct_unsqueeze_210)
        self.module_211 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.479(YOLOv3::nndct_unsqueeze_211)
        self.module_212 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.481(YOLOv3::nndct_unsqueeze_212)
        self.module_213 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.483(YOLOv3::nndct_unsqueeze_213)
        self.module_214 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.485(YOLOv3::nndct_concat_214)
        self.module_215 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.487(YOLOv3::nndct_sigmoid_215)
        self.module_216 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.489(YOLOv3::nndct_elemwise_mul_216)
        self.module_217 = py_nndct.nn.Module('nndct_max') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/r.9(YOLOv3::nndct_max_217)
        self.module_218 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.491(YOLOv3::nndct_unsqueeze_218)
        self.module_219 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.493(YOLOv3::nndct_unsqueeze_219)
        self.module_220 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.495(YOLOv3::nndct_concat_220)
        self.module_221 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_s]/ret.497(YOLOv3::nndct_flatten_221)
        self.module_222 = py_nndct.nn.Module('nndct_shape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/23514(YOLOv3::nndct_shape_222)
        self.module_223 = py_nndct.nn.Conv2d(in_channels=256, out_channels=512, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.499(YOLOv3::nndct_conv2d_223)
        self.module_224 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.503(YOLOv3::nndct_leaky_relu_224)
        self.module_225 = py_nndct.nn.Conv2d(in_channels=512, out_channels=75, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/Conv2d[detect]/ret.505(YOLOv3::nndct_conv2d_225)
        self.module_226 = py_nndct.nn.Module('nndct_permute') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.507(YOLOv3::nndct_permute_226)
        self.module_227 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.509(YOLOv3::nndct_flatten_227)
        self.module_228 = py_nndct.nn.Module('nndct_reshape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.511(YOLOv3::nndct_reshape_228)
        self.module_229 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.513(YOLOv3::nndct_strided_slice_229)
        self.module_230 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.515(YOLOv3::nndct_sigmoid_230)
        self.module_231 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.517(YOLOv3::nndct_strided_slice_231)
        self.module_232 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.519(YOLOv3::nndct_sigmoid_232)
        self.module_233 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.521(YOLOv3::nndct_strided_slice_233)
        self.module_234 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.523(YOLOv3::nndct_strided_slice_234)
        self.module_235 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.525(YOLOv3::nndct_concat_235)
        self.module_236 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.527(YOLOv3::nndct_select_236)
        self.module_237 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.529(YOLOv3::nndct_elemwise_add_237)
        self.module_238 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.531(YOLOv3::nndct_elemwise_div_238)
        self.module_239 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.533(YOLOv3::nndct_select_239)
        self.module_240 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.535(YOLOv3::nndct_elemwise_add_240)
        self.module_241 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.537(YOLOv3::nndct_elemwise_div_241)
        self.module_242 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.539(YOLOv3::nndct_select_242)
        self.module_243 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.541(YOLOv3::nndct_elemwise_exp_243)
        self.module_244 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.543(YOLOv3::nndct_elemwise_mul_244)
        self.module_245 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.545(YOLOv3::nndct_select_245)
        self.module_246 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.547(YOLOv3::nndct_elemwise_exp_246)
        self.module_247 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.549(YOLOv3::nndct_elemwise_mul_247)
        self.module_248 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.551(YOLOv3::nndct_unsqueeze_248)
        self.module_249 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.553(YOLOv3::nndct_unsqueeze_249)
        self.module_250 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.555(YOLOv3::nndct_unsqueeze_250)
        self.module_251 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.557(YOLOv3::nndct_unsqueeze_251)
        self.module_252 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.559(YOLOv3::nndct_concat_252)
        self.module_253 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.561(YOLOv3::nndct_sigmoid_253)
        self.module_254 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.563(YOLOv3::nndct_elemwise_mul_254)
        self.module_255 = py_nndct.nn.Module('nndct_max') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/r.21(YOLOv3::nndct_max_255)
        self.module_256 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.565(YOLOv3::nndct_unsqueeze_256)
        self.module_257 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.567(YOLOv3::nndct_unsqueeze_257)
        self.module_258 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.569(YOLOv3::nndct_concat_258)
        self.module_259 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_m]/ret.571(YOLOv3::nndct_flatten_259)
        self.module_260 = py_nndct.nn.Module('nndct_shape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/23757(YOLOv3::nndct_shape_260)
        self.module_261 = py_nndct.nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=[3, 3], stride=[1, 1], padding=[1, 1], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/Conv[conv]/Sequential[conv]/Conv2d[0]/ret.573(YOLOv3::nndct_conv2d_261)
        self.module_262 = py_nndct.nn.LeakyReLU(negative_slope=0.1015625, inplace=False) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/Conv[conv]/Sequential[conv]/LeakyReLU[2]/ret.577(YOLOv3::nndct_leaky_relu_262)
        self.module_263 = py_nndct.nn.Conv2d(in_channels=1024, out_channels=75, kernel_size=[1, 1], stride=[1, 1], padding=[0, 0], dilation=[1, 1], groups=1, bias=True) #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/Conv2d[detect]/ret.579(YOLOv3::nndct_conv2d_263)
        self.module_264 = py_nndct.nn.Module('nndct_permute') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.581(YOLOv3::nndct_permute_264)
        self.module_265 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.583(YOLOv3::nndct_flatten_265)
        self.module_266 = py_nndct.nn.Module('nndct_reshape') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.585(YOLOv3::nndct_reshape_266)
        self.module_267 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.587(YOLOv3::nndct_strided_slice_267)
        self.module_268 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.589(YOLOv3::nndct_sigmoid_268)
        self.module_269 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.591(YOLOv3::nndct_strided_slice_269)
        self.module_270 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.593(YOLOv3::nndct_sigmoid_270)
        self.module_271 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.595(YOLOv3::nndct_strided_slice_271)
        self.module_272 = py_nndct.nn.strided_slice() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.597(YOLOv3::nndct_strided_slice_272)
        self.module_273 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.599(YOLOv3::nndct_concat_273)
        self.module_274 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.601(YOLOv3::nndct_select_274)
        self.module_275 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.603(YOLOv3::nndct_elemwise_add_275)
        self.module_276 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.605(YOLOv3::nndct_elemwise_div_276)
        self.module_277 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.607(YOLOv3::nndct_select_277)
        self.module_278 = py_nndct.nn.Add() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.609(YOLOv3::nndct_elemwise_add_278)
        self.module_279 = py_nndct.nn.Module('nndct_elemwise_div') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.611(YOLOv3::nndct_elemwise_div_279)
        self.module_280 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.613(YOLOv3::nndct_select_280)
        self.module_281 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.615(YOLOv3::nndct_elemwise_exp_281)
        self.module_282 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.617(YOLOv3::nndct_elemwise_mul_282)
        self.module_283 = py_nndct.nn.Module('nndct_select') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.619(YOLOv3::nndct_select_283)
        self.module_284 = py_nndct.nn.Module('nndct_elemwise_exp') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.621(YOLOv3::nndct_elemwise_exp_284)
        self.module_285 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.623(YOLOv3::nndct_elemwise_mul_285)
        self.module_286 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.625(YOLOv3::nndct_unsqueeze_286)
        self.module_287 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.627(YOLOv3::nndct_unsqueeze_287)
        self.module_288 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.629(YOLOv3::nndct_unsqueeze_288)
        self.module_289 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.631(YOLOv3::nndct_unsqueeze_289)
        self.module_290 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.633(YOLOv3::nndct_concat_290)
        self.module_291 = py_nndct.nn.Sigmoid() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.635(YOLOv3::nndct_sigmoid_291)
        self.module_292 = py_nndct.nn.Module('nndct_elemwise_mul') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.637(YOLOv3::nndct_elemwise_mul_292)
        self.module_293 = py_nndct.nn.Module('nndct_max') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/r.33(YOLOv3::nndct_max_293)
        self.module_294 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.639(YOLOv3::nndct_unsqueeze_294)
        self.module_295 = py_nndct.nn.Module('nndct_unsqueeze') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.641(YOLOv3::nndct_unsqueeze_295)
        self.module_296 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.643(YOLOv3::nndct_concat_296)
        self.module_297 = py_nndct.nn.Module('nndct_flatten') #YOLOv3::YOLOv3/YoloHead[head]/DetectLayer[detect_l]/ret.645(YOLOv3::nndct_flatten_297)
        self.module_298 = py_nndct.nn.Cat() #YOLOv3::YOLOv3/ret(YOLOv3::nndct_concat_298)

    @py_nndct.nn.forward_processor
    def forward(self, *args):
        output_module_0 = self.module_0(data=52.0, dtype=torch.float, device='cpu')
        output_module_1 = self.module_1(data=52.0, dtype=torch.float, device='cpu')
        output_module_2 = self.module_2(data=26.0, dtype=torch.float, device='cpu')
        output_module_3 = self.module_3(data=26.0, dtype=torch.float, device='cpu')
        output_module_4 = self.module_4(data=13.0, dtype=torch.float, device='cpu')
        output_module_5 = self.module_5(data=13.0, dtype=torch.float, device='cpu')
        output_module_6 = self.module_6(data=[[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[26],[27],[28],[29],[30],[31],[32],[33],[34],[35],[36],[37],[38],[39],[40],[41],[42],[43],[44],[45],[46],[47],[48],[49],[50],[51]]], dtype=torch.int64, device='cpu')
        output_module_7 = self.module_7(datadtype=torch.int64, device='cpu')
        output_module_8 = self.module_8(data=[0.24799999594688416,0.3614457845687866,0.41999998688697815], dtype=torch.float, device='cpu')
        output_module_9 = self.module_9(data=[0.7237237095832825,0.5299999713897705,0.9306666851043701], dtype=torch.float, device='cpu')
        output_module_10 = self.module_10(data=[[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[13],[14],[15],[16],[17],[18],[19],[20],[21],[22],[23],[24],[25]]], dtype=torch.int64, device='cpu')
        output_module_11 = self.module_11(data=[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[13],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[14],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[15],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[16],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[17],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[18],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[19],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[20],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[22],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[23],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25],[25]]], dtype=torch.int64, device='cpu')
        output_module_12 = self.module_12(data=[0.4560000002384186,0.4880000054836273,0.6636636853218079], dtype=torch.float, device='cpu')
        output_module_13 = self.module_13(data=[0.6858006119728088,0.8168168067932129,0.27399998903274536], dtype=torch.float, device='cpu')
        output_module_14 = self.module_14(data=[[[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12],[0],[1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12]]], dtype=torch.int64, device='cpu')
        output_module_15 = self.module_15(data=[[[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[0],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[3],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[4],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[6],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[8],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[9],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[10],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[11],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12],[12]]], dtype=torch.int64, device='cpu')
        output_module_16 = self.module_16(data=[0.8059999942779541,0.8605263233184814,0.9440000057220459], dtype=torch.float, device='cpu')
        output_module_17 = self.module_17(data=[0.6480000019073486,0.8736842274665833,0.5733333230018616], dtype=torch.float, device='cpu')
        output_module_18 = self.module_18(input=args[0])
        output_module_18 = self.module_19(output_module_18)
        output_module_18 = self.module_20(output_module_18)
        output_module_18 = self.module_21(output_module_18)
        output_module_18 = self.module_22(output_module_18)
        output_module_23 = self.module_23(output_module_18)
        output_module_23 = self.module_24(output_module_23)
        output_module_23 = self.module_25(output_module_23)
        output_module_23 = self.module_26(output_module_23)
        output_module_23 = self.module_27(input=output_module_23, other=output_module_18, alpha=1)
        output_module_23 = self.module_28(output_module_23)
        output_module_23 = self.module_29(output_module_23)
        output_module_30 = self.module_30(output_module_23)
        output_module_30 = self.module_31(output_module_30)
        output_module_30 = self.module_32(output_module_30)
        output_module_30 = self.module_33(output_module_30)
        output_module_30 = self.module_34(input=output_module_30, other=output_module_23, alpha=1)
        output_module_35 = self.module_35(output_module_30)
        output_module_35 = self.module_36(output_module_35)
        output_module_35 = self.module_37(output_module_35)
        output_module_35 = self.module_38(output_module_35)
        output_module_35 = self.module_39(input=output_module_35, other=output_module_30, alpha=1)
        output_module_35 = self.module_40(output_module_35)
        output_module_35 = self.module_41(output_module_35)
        output_module_42 = self.module_42(output_module_35)
        output_module_42 = self.module_43(output_module_42)
        output_module_42 = self.module_44(output_module_42)
        output_module_42 = self.module_45(output_module_42)
        output_module_42 = self.module_46(input=output_module_42, other=output_module_35, alpha=1)
        output_module_47 = self.module_47(output_module_42)
        output_module_47 = self.module_48(output_module_47)
        output_module_47 = self.module_49(output_module_47)
        output_module_47 = self.module_50(output_module_47)
        output_module_47 = self.module_51(input=output_module_47, other=output_module_42, alpha=1)
        output_module_52 = self.module_52(output_module_47)
        output_module_52 = self.module_53(output_module_52)
        output_module_52 = self.module_54(output_module_52)
        output_module_52 = self.module_55(output_module_52)
        output_module_52 = self.module_56(input=output_module_52, other=output_module_47, alpha=1)
        output_module_57 = self.module_57(output_module_52)
        output_module_57 = self.module_58(output_module_57)
        output_module_57 = self.module_59(output_module_57)
        output_module_57 = self.module_60(output_module_57)
        output_module_57 = self.module_61(input=output_module_57, other=output_module_52, alpha=1)
        output_module_62 = self.module_62(output_module_57)
        output_module_62 = self.module_63(output_module_62)
        output_module_62 = self.module_64(output_module_62)
        output_module_62 = self.module_65(output_module_62)
        output_module_62 = self.module_66(input=output_module_62, other=output_module_57, alpha=1)
        output_module_67 = self.module_67(output_module_62)
        output_module_67 = self.module_68(output_module_67)
        output_module_67 = self.module_69(output_module_67)
        output_module_67 = self.module_70(output_module_67)
        output_module_67 = self.module_71(input=output_module_67, other=output_module_62, alpha=1)
        output_module_72 = self.module_72(output_module_67)
        output_module_72 = self.module_73(output_module_72)
        output_module_72 = self.module_74(output_module_72)
        output_module_72 = self.module_75(output_module_72)
        output_module_72 = self.module_76(input=output_module_72, other=output_module_67, alpha=1)
        output_module_77 = self.module_77(output_module_72)
        output_module_77 = self.module_78(output_module_77)
        output_module_77 = self.module_79(output_module_77)
        output_module_77 = self.module_80(output_module_77)
        output_module_77 = self.module_81(input=output_module_77, other=output_module_72, alpha=1)
        output_module_82 = self.module_82(output_module_77)
        output_module_82 = self.module_83(output_module_82)
        output_module_84 = self.module_84(output_module_82)
        output_module_84 = self.module_85(output_module_84)
        output_module_84 = self.module_86(output_module_84)
        output_module_84 = self.module_87(output_module_84)
        output_module_84 = self.module_88(input=output_module_84, other=output_module_82, alpha=1)
        output_module_89 = self.module_89(output_module_84)
        output_module_89 = self.module_90(output_module_89)
        output_module_89 = self.module_91(output_module_89)
        output_module_89 = self.module_92(output_module_89)
        output_module_89 = self.module_93(input=output_module_89, other=output_module_84, alpha=1)
        output_module_94 = self.module_94(output_module_89)
        output_module_94 = self.module_95(output_module_94)
        output_module_94 = self.module_96(output_module_94)
        output_module_94 = self.module_97(output_module_94)
        output_module_94 = self.module_98(input=output_module_94, other=output_module_89, alpha=1)
        output_module_99 = self.module_99(output_module_94)
        output_module_99 = self.module_100(output_module_99)
        output_module_99 = self.module_101(output_module_99)
        output_module_99 = self.module_102(output_module_99)
        output_module_99 = self.module_103(input=output_module_99, other=output_module_94, alpha=1)
        output_module_104 = self.module_104(output_module_99)
        output_module_104 = self.module_105(output_module_104)
        output_module_104 = self.module_106(output_module_104)
        output_module_104 = self.module_107(output_module_104)
        output_module_104 = self.module_108(input=output_module_104, other=output_module_99, alpha=1)
        output_module_109 = self.module_109(output_module_104)
        output_module_109 = self.module_110(output_module_109)
        output_module_109 = self.module_111(output_module_109)
        output_module_109 = self.module_112(output_module_109)
        output_module_109 = self.module_113(input=output_module_109, other=output_module_104, alpha=1)
        output_module_114 = self.module_114(output_module_109)
        output_module_114 = self.module_115(output_module_114)
        output_module_114 = self.module_116(output_module_114)
        output_module_114 = self.module_117(output_module_114)
        output_module_114 = self.module_118(input=output_module_114, other=output_module_109, alpha=1)
        output_module_119 = self.module_119(output_module_114)
        output_module_119 = self.module_120(output_module_119)
        output_module_119 = self.module_121(output_module_119)
        output_module_119 = self.module_122(output_module_119)
        output_module_119 = self.module_123(input=output_module_119, other=output_module_114, alpha=1)
        output_module_124 = self.module_124(output_module_119)
        output_module_124 = self.module_125(output_module_124)
        output_module_126 = self.module_126(output_module_124)
        output_module_126 = self.module_127(output_module_126)
        output_module_126 = self.module_128(output_module_126)
        output_module_126 = self.module_129(output_module_126)
        output_module_126 = self.module_130(input=output_module_126, other=output_module_124, alpha=1)
        output_module_131 = self.module_131(output_module_126)
        output_module_131 = self.module_132(output_module_131)
        output_module_131 = self.module_133(output_module_131)
        output_module_131 = self.module_134(output_module_131)
        output_module_131 = self.module_135(input=output_module_131, other=output_module_126, alpha=1)
        output_module_136 = self.module_136(output_module_131)
        output_module_136 = self.module_137(output_module_136)
        output_module_136 = self.module_138(output_module_136)
        output_module_136 = self.module_139(output_module_136)
        output_module_136 = self.module_140(input=output_module_136, other=output_module_131, alpha=1)
        output_module_141 = self.module_141(output_module_136)
        output_module_141 = self.module_142(output_module_141)
        output_module_141 = self.module_143(output_module_141)
        output_module_141 = self.module_144(output_module_141)
        output_module_141 = self.module_145(input=output_module_141, other=output_module_136, alpha=1)
        output_module_141 = self.module_146(output_module_141)
        output_module_141 = self.module_147(output_module_141)
        output_module_141 = self.module_148(output_module_141)
        output_module_141 = self.module_149(output_module_141)
        output_module_141 = self.module_150(output_module_141)
        output_module_141 = self.module_151(output_module_141)
        output_module_141 = self.module_152(output_module_141)
        output_module_141 = self.module_153(output_module_141)
        output_module_141 = self.module_154(output_module_141)
        output_module_141 = self.module_155(output_module_141)
        output_module_156 = self.module_156(output_module_141)
        output_module_156 = self.module_157(output_module_156)
        output_module_156 = self.module_158(input=output_module_156, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_156 = self.module_159(dim=1, tensors=[output_module_156,output_module_119])
        output_module_156 = self.module_160(output_module_156)
        output_module_156 = self.module_161(output_module_156)
        output_module_156 = self.module_162(output_module_156)
        output_module_156 = self.module_163(output_module_156)
        output_module_156 = self.module_164(output_module_156)
        output_module_156 = self.module_165(output_module_156)
        output_module_156 = self.module_166(output_module_156)
        output_module_156 = self.module_167(output_module_156)
        output_module_156 = self.module_168(output_module_156)
        output_module_156 = self.module_169(output_module_156)
        output_module_170 = self.module_170(output_module_156)
        output_module_170 = self.module_171(output_module_170)
        output_module_170 = self.module_172(input=output_module_170, size=None, scale_factor=[2.0,2.0], mode='nearest')
        output_module_170 = self.module_173(dim=1, tensors=[output_module_170,output_module_77])
        output_module_170 = self.module_174(output_module_170)
        output_module_170 = self.module_175(output_module_170)
        output_module_170 = self.module_176(output_module_170)
        output_module_170 = self.module_177(output_module_170)
        output_module_170 = self.module_178(output_module_170)
        output_module_170 = self.module_179(output_module_170)
        output_module_170 = self.module_180(output_module_170)
        output_module_170 = self.module_181(output_module_170)
        output_module_170 = self.module_182(output_module_170)
        output_module_170 = self.module_183(output_module_170)
        output_module_184 = self.module_184(input=output_module_170, dim=0)
        output_module_185 = self.module_185(output_module_170)
        output_module_185 = self.module_186(output_module_185)
        output_module_185 = self.module_187(output_module_185)
        output_module_185 = self.module_188(dims=[0,2,3,1], input=output_module_185)
        output_module_185 = self.module_189(input=output_module_185, start_dim=1, end_dim=2)
        output_module_185 = self.module_190(input=output_module_185, shape=[output_module_184,-1,3,25])
        output_module_191 = self.module_191(input=output_module_185, dim=[3], start=[0], end=[1], step=[1])
        output_module_191 = self.module_192(output_module_191)
        output_module_193 = self.module_193(input=output_module_185, dim=[3], start=[1], end=[3], step=[1])
        output_module_193 = self.module_194(output_module_193)
        output_module_195 = self.module_195(input=output_module_185, dim=[3], start=[3], end=[5], step=[1])
        output_module_196 = self.module_196(input=output_module_185, dim=[3], start=[5], end=[9223372036854775807], step=[1])
        output_module_193 = self.module_197(dim=-1, tensors=[output_module_193,output_module_195])
        output_module_198 = self.module_198(input=output_module_193, dim=3, index=0)
        output_module_198 = self.module_199(input=output_module_198, other=output_module_6, alpha=1)
        output_module_198 = self.module_200(input=output_module_198, other=output_module_0)
        output_module_201 = self.module_201(input=output_module_193, dim=3, index=1)
        output_module_201 = self.module_202(input=output_module_201, other=output_module_7, alpha=1)
        output_module_201 = self.module_203(input=output_module_201, other=output_module_1)
        output_module_204 = self.module_204(input=output_module_193, dim=3, index=2)
        output_module_204 = self.module_205(input=output_module_204)
        output_module_204 = self.module_206(input=output_module_204, other=output_module_8)
        output_module_207 = self.module_207(input=output_module_193, dim=3, index=3)
        output_module_207 = self.module_208(input=output_module_207)
        output_module_207 = self.module_209(input=output_module_207, other=output_module_9)
        output_module_198 = self.module_210(input=output_module_198, dim=-1)
        output_module_201 = self.module_211(input=output_module_201, dim=-1)
        output_module_204 = self.module_212(input=output_module_204, dim=-1)
        output_module_207 = self.module_213(input=output_module_207, dim=-1)
        output_module_198 = self.module_214(dim=-1, tensors=[output_module_198,output_module_201,output_module_204,output_module_207])
        output_module_196 = self.module_215(output_module_196)
        output_module_191 = self.module_216(input=output_module_191, other=output_module_196)
        output_module_217_0,output_module_217_1 = self.module_217(input=output_module_191, dim=-1, keepdim=False)
        output_module_218 = self.module_218(input=output_module_217_0, dim=-1)
        output_module_219 = self.module_219(input=output_module_217_1, dim=-1)
        output_module_218 = self.module_220(dim=-1, tensors=[output_module_218,output_module_198,output_module_219])
        output_module_218 = self.module_221(input=output_module_218, start_dim=1, end_dim=2)
        output_module_222 = self.module_222(input=output_module_156, dim=0)
        output_module_223 = self.module_223(output_module_156)
        output_module_223 = self.module_224(output_module_223)
        output_module_223 = self.module_225(output_module_223)
        output_module_223 = self.module_226(dims=[0,2,3,1], input=output_module_223)
        output_module_223 = self.module_227(input=output_module_223, start_dim=1, end_dim=2)
        output_module_223 = self.module_228(input=output_module_223, shape=[output_module_222,-1,3,25])
        output_module_229 = self.module_229(input=output_module_223, dim=[3], start=[0], end=[1], step=[1])
        output_module_229 = self.module_230(output_module_229)
        output_module_231 = self.module_231(input=output_module_223, dim=[3], start=[1], end=[3], step=[1])
        output_module_231 = self.module_232(output_module_231)
        output_module_233 = self.module_233(input=output_module_223, dim=[3], start=[3], end=[5], step=[1])
        output_module_234 = self.module_234(input=output_module_223, dim=[3], start=[5], end=[9223372036854775807], step=[1])
        output_module_231 = self.module_235(dim=-1, tensors=[output_module_231,output_module_233])
        output_module_236 = self.module_236(input=output_module_231, dim=3, index=0)
        output_module_236 = self.module_237(input=output_module_236, other=output_module_10, alpha=1)
        output_module_236 = self.module_238(input=output_module_236, other=output_module_2)
        output_module_239 = self.module_239(input=output_module_231, dim=3, index=1)
        output_module_239 = self.module_240(input=output_module_239, other=output_module_11, alpha=1)
        output_module_239 = self.module_241(input=output_module_239, other=output_module_3)
        output_module_242 = self.module_242(input=output_module_231, dim=3, index=2)
        output_module_242 = self.module_243(input=output_module_242)
        output_module_242 = self.module_244(input=output_module_242, other=output_module_12)
        output_module_245 = self.module_245(input=output_module_231, dim=3, index=3)
        output_module_245 = self.module_246(input=output_module_245)
        output_module_245 = self.module_247(input=output_module_245, other=output_module_13)
        output_module_236 = self.module_248(input=output_module_236, dim=-1)
        output_module_239 = self.module_249(input=output_module_239, dim=-1)
        output_module_242 = self.module_250(input=output_module_242, dim=-1)
        output_module_245 = self.module_251(input=output_module_245, dim=-1)
        output_module_236 = self.module_252(dim=-1, tensors=[output_module_236,output_module_239,output_module_242,output_module_245])
        output_module_234 = self.module_253(output_module_234)
        output_module_229 = self.module_254(input=output_module_229, other=output_module_234)
        output_module_255_0,output_module_255_1 = self.module_255(input=output_module_229, dim=-1, keepdim=False)
        output_module_256 = self.module_256(input=output_module_255_0, dim=-1)
        output_module_257 = self.module_257(input=output_module_255_1, dim=-1)
        output_module_256 = self.module_258(dim=-1, tensors=[output_module_256,output_module_236,output_module_257])
        output_module_256 = self.module_259(input=output_module_256, start_dim=1, end_dim=2)
        output_module_260 = self.module_260(input=output_module_141, dim=0)
        output_module_261 = self.module_261(output_module_141)
        output_module_261 = self.module_262(output_module_261)
        output_module_261 = self.module_263(output_module_261)
        output_module_261 = self.module_264(dims=[0,2,3,1], input=output_module_261)
        output_module_261 = self.module_265(input=output_module_261, start_dim=1, end_dim=2)
        output_module_261 = self.module_266(input=output_module_261, shape=[output_module_260,-1,3,25])
        output_module_267 = self.module_267(input=output_module_261, dim=[3], start=[0], end=[1], step=[1])
        output_module_267 = self.module_268(output_module_267)
        output_module_269 = self.module_269(input=output_module_261, dim=[3], start=[1], end=[3], step=[1])
        output_module_269 = self.module_270(output_module_269)
        output_module_271 = self.module_271(input=output_module_261, dim=[3], start=[3], end=[5], step=[1])
        output_module_272 = self.module_272(input=output_module_261, dim=[3], start=[5], end=[9223372036854775807], step=[1])
        output_module_269 = self.module_273(dim=-1, tensors=[output_module_269,output_module_271])
        output_module_274 = self.module_274(input=output_module_269, dim=3, index=0)
        output_module_274 = self.module_275(input=output_module_274, other=output_module_14, alpha=1)
        output_module_274 = self.module_276(input=output_module_274, other=output_module_4)
        output_module_277 = self.module_277(input=output_module_269, dim=3, index=1)
        output_module_277 = self.module_278(input=output_module_277, other=output_module_15, alpha=1)
        output_module_277 = self.module_279(input=output_module_277, other=output_module_5)
        output_module_280 = self.module_280(input=output_module_269, dim=3, index=2)
        output_module_280 = self.module_281(input=output_module_280)
        output_module_280 = self.module_282(input=output_module_280, other=output_module_16)
        output_module_283 = self.module_283(input=output_module_269, dim=3, index=3)
        output_module_283 = self.module_284(input=output_module_283)
        output_module_283 = self.module_285(input=output_module_283, other=output_module_17)
        output_module_274 = self.module_286(input=output_module_274, dim=-1)
        output_module_277 = self.module_287(input=output_module_277, dim=-1)
        output_module_280 = self.module_288(input=output_module_280, dim=-1)
        output_module_283 = self.module_289(input=output_module_283, dim=-1)
        output_module_274 = self.module_290(dim=-1, tensors=[output_module_274,output_module_277,output_module_280,output_module_283])
        output_module_272 = self.module_291(output_module_272)
        output_module_267 = self.module_292(input=output_module_267, other=output_module_272)
        output_module_293_0,output_module_293_1 = self.module_293(input=output_module_267, dim=-1, keepdim=False)
        output_module_294 = self.module_294(input=output_module_293_0, dim=-1)
        output_module_295 = self.module_295(input=output_module_293_1, dim=-1)
        output_module_294 = self.module_296(dim=-1, tensors=[output_module_294,output_module_274,output_module_295])
        output_module_294 = self.module_297(input=output_module_294, start_dim=1, end_dim=2)
        output_module_218 = self.module_298(dim=1, tensors=[output_module_218,output_module_256,output_module_294])
        return output_module_218
